# Script (Python) "AAA"
# bind container=container
# bind context=context
# bind namespace=
# bind script=script
# bind subpath=traverse_subpath
# parameters=
# title=changes the process for envelopes for the 602 obligation and adds a
# confirmation letter
##


def getActorDraft(e):
    latestDraftWokitem = [
        wi for wi in e.getListOfWorkitems() if wi.activity_id == 'Draft'][-1]
    return latestDraftWokitem.actor


for env in context.Catalog(meta_type='Report Envelope',  # noqa: F821
                           dataflow_uris=[
                               'http://rod.eionet.europa.eu/obligations/602'
                           ]):
    e = env.getObject()
    previous_feedback = [x.id for x in e.objectValues(
        'Report Feedback') if x.title == 'Confirmation of receipt']
    if previous_feedback:
        print e.absolute_url()
        list_of_obligations = []

        for obl in list(e.dataflow_uris):
            list_of_obligations.append(
                """<strong>%s</strong> (<a href="%s">%s</a>)""" %
                (e.dataflow_lookup(obl)['TITLE'], obl, obl))

        obligations_para = "<br/>\n".join(list_of_obligations)

        l_ret = """
<p>
European Environment Agency<br />
Kongens Nytorv 6<br />
DK 1050 Copenhagen K
</p>

<br />
<p><strong>To Whom It May Concern</strong></p>

<br />
<p>This is a confirmation of receipt for national data submissions under the
 European Reporting Obligation</p>

<p>%s</p>

<p>
The following delivery has been submitted for <strong>%s</strong> to the
 Reportnet Central Data Repository (CDR) and was made available on
 <strong>%s</strong>.
</p>

<table>
<tr><td>Envelope:</td><td>%s</td></tr>
<tr><td>Location:</td><td><a href="%s">%s</a></td></tr>
</table>

<p>List of files:</p>

    <ol>""" % (obligations_para, e.getCountryName(),
               e.reportingdate.strftime('%d %B %Y'),
               e.title_or_id(), e.absolute_url(), e.absolute_url())

        documents_list = e.objectValues(
            ['Report Document', 'Report Hyperlink'])
        documents_list.sort(key=lambda ob: ob.getId().lower())
        for f in documents_list:
            l_ret += '<li>%s</li>' % (f.id)
            if f.meta_type == 'Report Document':
                zip_files = e.getZipInfo(f)
                if zip_files:
                    l_ret += '<div class="zip_content">'
                    l_ret += '<em>files contained inside the ' +\
                             f.title_or_id() + ' archive:</em>'
                    l_ret += '<ul>'
                    for file in zip_files:
                        l_ret += '<li>%s</li>' % file
                    l_ret += '</ul>'
                    l_ret += '</div>'
        l_ret += """
</ol>

<p>
The above-mentioned files were submitted by user: %s (%s)
</p>

<p><em>
This confirmation is electronically generated by the Reportnet system
 and therefore not signed.
</em></p>
""" % (e.getLDAPUserCanonicalName(e.getLDAPUser(getActorDraft(e))),
            getActorDraft(e))

        if previous_feedback:
            e.manage_delObjects(previous_feedback)
        e.manage_addFeedback(title="Confirmation of receipt",
                             feedbacktext=l_ret, automatic=1,
                             content_type='text/html')

return printed  # noqa: F999

# http://cdr.eionet.europa.eu/recent_etc?RA_ID=602
# request = container.REQUEST
#
# for x in ['es/eu/fhrm/envuvtvkq', 'es/eu/fhrm/envuv3xiq',
#           'es/eu/fhrm/envuvtveq', 'be/eu/fhrm/envuwxp4g',
#           'be/eu/fhrm/envuwyfqg', 'se/eu/fhrm/envuycn0a',
#           'se/eu/fhrm/envuyc6zw', 'se/eu/fhrm/envuyc66g',
#           'se/eu/fhrm/envuyc4dw', 'se/eu/fhrm/envuyc3pq',
#           'se/eu/fhrm/envuyc2za', 'hu/eu/fhrm/envuyhrhw',
#           'hu/eu/fhrm/envuygcmw', 'dk/eu/fhrm/coluylxzq/envuylyla',
#           'dk/eu/fhrm/coluylyew/envuylatq', 'cz/eu/fhrm/envuyluag']:
#  e = context.restrictedTraverse(x)
#  print e.absolute_url(), e.process_path
#  e.setProcess('WorkflowEngine/default_with_confirmation')
#  print e.process_path
#
# return printed
#
# from DateTime import DateTime
