<metal:block define-macro="obligationsSelect">
  <select size="15" id="dataflows" name="dataflow_uris"
          tal:define="u python:context.getUniqueValuesFor('dataflow_uris');
                      sort_by python:(('SOURCE_TITLE', 'nocase', 'asc'),
                                      ('TITLE', 'nocase', 'asc'));
                      currentsource string:'';
                      values python:context.dataflow_table();
                      dummy python:values.sort(key=lambda k: (k.get('uri') in u, k['SOURCE_TITLE'], k['TITLE']));">
    <tal:block repeat="value values">
      <tal:block
          define="flip python:repeat['value'].start or
                  value['SOURCE_TITLE']!=values[repeat['value'].index-1]['SOURCE_TITLE'];
                  source_title python:value['SOURCE_TITLE'][:60] + ' ...' if len(value['SOURCE_TITLE'])>60
                  else value['SOURCE_TITLE']"
          condition="python: value.get('uri') in u">
          <tal:block condition="python:flip and not repeat['value'].start"
                     content="structure string:</optgroup>" />
          <tal:block condition="flip"
                     content='structure string:<optgroup label="${source_title}">'/>
              <tal:block define="text python:value['TITLE'][:75] + ' ...' if len(value['TITLE'])>75 else value['TITLE'];">
              <option tal:attributes="value value/uri;
                                      label text;
                                      class python: 'terminated' if value.get('terminated') else ''"
                      tal:content="text"/>
              </tal:block>
          </tal:block>
    </tal:block>
    <tal:block content="structure string:</optgroup>" />
  </select>
</metal:block>


<metal:block define-macro="xmlSchemaSelect">
    <select
      size="15" id="xml_schema_location" name="xml_schema_location"
      tal:define="values python:context.getUniqueValuesFor('xml_schema_location');">
      <tal:block repeat="value values">
        <option tal:attributes="value value;" tal:content="value"/>
      </tal:block>
    </select>
</metal:block>


<metal:block define-macro="partOfYearSelect">
  <select id="partofyear" name="partofyear">
    <option value="">Any part of year</option>
    <option tal:define="options python:('Whole Year', 'First Half',
                                        'Second Half', 'First Quarter',
                                        'Second Quarter', 'Third Quarter',
                                        'Fourth Quarter', 'January',
                                        'February', 'March', 'April', 'May', 'June',
                                        'July','August','September','October','November','December')"
            tal:repeat="value options"
            tal:attributes="value value"
            tal:content="value">
        part_of_year
    </option>
  </select>
</metal:block>


<metal:block define-macro="countrySelect">
  <select id="country" name="country">
    <option></option>
    <option tal:define="values python:context.localities_table"
            tal:repeat="value values"
            tal:attributes="value value/uri"
            tal:content="value/name" >
        country
    </option>
  </select>
</metal:block>


<metal:block define-macro="formInputFields">
  <input type="hidden" name="sort_on" value="reportingdate"/>
  <input type="hidden" name="sort_order" value="reverse"/>
  <input type="submit" value="Submit Query" />
  <input type="reset" value="Reset fields" />
</metal:block>


<metal:block define-macro="resultsTable">

<a href="nextbatch" tal:define="p batch/previous"
                    tal:condition="p"
                    tal:attributes="href string:?query_start=${p/first}">
    (Previous <span tal:replace="p/length">n</span> results)
</a>

<table class="sortable">
  <thead>
    <tr>
        <metal:block define-slot="resultsTableHead"/>
    </tr>
  </thead>
  <tbody>
      <tal:block repeat="result batch">
      <tr tal:attributes="class python:'zebraeven' if not repeat['result'].index%2 else ''">
        <tal:block define="obj python:result.getObject()">
          <metal:block define-slot="resultsTableRowFormat"/>
        </tal:block>
      </tr>
    </tal:block>
  </tbody>
</table>

<a href="nextbatch" tal:define="n batch/next"
                    tal:condition="n"
                    tal:attributes="href string:?query_start=${batch/end}">
     (Next <span tal:replace="n/length">n</span> results)
</a>
</metal:block>


<metal:block define-macro="countryReporters">
    <h2 style="background-color: #f0f0f0; padding: 0.1em"
        tal:content="python:country.title or country.id">
        Country
    </h2>
    <tal:block define="reporters_list python:context.getReportersByCountry(country.absolute_url(1),
                                                                           'Reporter').keys()">
        <tal:block condition="python:reporters_list">
            <table class="sortable" width="100%">
                <tr>
                    <th><span>ID</span></th>
                    <th><span>First Name</span></th>
                    <th><span>Last Name</span></th>
                    <th><span>Email</span></th>
                </tr>
            <tal:block define="dummy python:reporters_list.sort()" repeat="reporter reporters_list">
                <tal:block define="user_dn python:context.getLDAPUser(reporter)">
                <tr>
                    <td tal:content="reporter">reporter</td>
                    <td tal:content="python:context.getLDAPUserFirstName(user_dn)">First Name</td>
                    <td tal:content="python:context.getLDAPUserLastName(user_dn)">Last Name</td>
                    <td tal:content="python:context.getLDAPUserEmail(user_dn)">Email</td>
                </tr>
                </tal:block>
            </tal:block>
            </table>
        </tal:block>
        <tal:block condition="python:not reporters_list">
            &nbsp;<span>N/A</span>
        </tal:block>
    </tal:block>
</metal:block>
