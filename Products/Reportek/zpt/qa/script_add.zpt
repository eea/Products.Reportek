<tal:block tal:replace="structure context/manage_page_header"/>
<tal:block tal:replace="structure python:context.manage_form_title(template, context, form_title='Add QAScript Form', help_product='Reportek', help_topic='')"/>

<form action="manage_addQAScript" method="post">
<table cellspacing="0" cellpadding="2" border="0">
	<tr>
		<th><label class="form-label" for="id">Id</label></th>
		<td><input type="text" name="id" id="id" size="20" /></td>
	</tr>
	<tr>
		<th><label class="form-optional" for="title">Title</label></th>
		<td><input type="text" name="title" id="title" size="40" /></td>
	</tr>
	<tr>
		<th><label class="form-optional" for="description">Description</label></th>
		<td><textarea name="description" id="description" cols="40" rows="3"></textarea></td>
	</tr>
	<tr>
		<th><label for="workflow" class="form-optional">Obligation</label></th>
		<td tal:define="data here/ReportekEngine/dataflow_table_grouped; groups python:data[0]; items python:data[1]">
			<select id="workflow" name="workflow">
				<tal:block tal:repeat="group groups">
					<optgroup tal:attributes="label python:test(len(group)<=80, group, '%s ...' % group[:77])">
						<tal:block tal:repeat="item python:items[group]">
							<option tal:define="terminated python:item.has_key('terminated') and item['terminated']=='1'" tal:attributes="value item/uri; class python:test(terminated, 'terminated', None) ">
								[<span tal:replace="python:' '.join(item['SOURCE_TITLE'].split()[0:2])" />]
								<span tal:replace="python:test(len(item['TITLE'])<=80, item['TITLE'], '%s ...' % item['TITLE'][:77])" />
								<tal:block tal:condition="terminated"> (<tal:block i18n:translate="">terminated</tal:block>)</tal:block>
							</option>
						</tal:block>
					</optgroup>
				</tal:block>
			</select>
		</td>
	</tr>
	<tr>
		<th><label class="form-optional" for="content_type_in">Accepted content-type</label></th>
		<td><input type="text" name="content_type_in" id="content_type_in" size="40" /></td>
	</tr>
	<tr>
		<th><label class="form-optional" for="xml_schema">XML schema</label></th>
		<td><input type="text" name="xml_schema" id="xml_schema" size="40" /></td>
	</tr>
	<tr>
		<th><label class="form-optional" for="content_type_out">Output content type</label></th>
		<td><input type="text" name="content_type_out" id="content_type_out" size="40" /></td>
	</tr>
	<tr>
		<th><label class="form-optional" for="script_url">Script path</label></th>
		<td><input type="text" name="script_url" id="script_url" size="40" /></td>
	</tr>
	<tr>
		<th><label for="max_size" class="form-label">Upper limit for file size</th>
		<td><input type="text" name="max_size" id="max_size" size="70"
						value="10" />MB (default 10 MB)</td>
	</tr>
	<tr>
		<td colspan="2">
			Define the values for the extra parameters to be evaluated as Python expressions
			in the exact order as they appear in the QA function called.
			You can use '<code>file_obj</code>' as file context and '<code>l_script_obj<code>'
			as the QA script object.
			(e.g. <code>file_obj.getParentNode().getCountryCode()</code>)
		</td>
	</tr>
	<tr>
		<th><label class="form-optional" for="qa_extraparams">Extra parameters</label></th>
		<td align="left" valign="top"><textarea name="qa_extraparams" id="qa_extraparams" rows="5" cols="40"></textarea></td>
	</tr>
</table>
<input class="form-element" type="submit" name="submit" value="Add" />
</form>

<tal:block tal:replace="structure context/manage_page_footer"/>
