<tal:block tal:replace="structure context/manage_page_header" />
<tal:block tal:replace="structure context/manage_tabs" />

<p class="form-help">
	To change property values, edit the values and click "Save changes". 
</p>

<form action="manage_settings" method="post">
<table border="0" cellpadding="2" cellspacing="0">
	<tr>
		<td><label for="title" class="form-optional">Title</label></td>
		<td><input type="text" name="title" id="title" tal:attributes="value here/title" size="35" /></td>
	</tr>
	<tr>
		<td><label for="description" class="form-optional">Description</label></td>
		<td><textarea name="description" id="description" cols="40" rows="3" tal:content="here/description"></textarea></td>
	</tr>
	<tr>
		<td><label for="xml_schema" class="form-optional">XML schema</label></td>
		<td><input type="text" name="xml_schema" id="xml_schema" tal:attributes="value here/xml_schema" size="50" /></td>
	</tr>
	<tr>
		<td><label for="workflow" class="form-optional">Obligation</label></td>
		<td tal:define="data here/ReportekEngine/dataflow_table_grouped; groups python:data[0]; items python:data[1]">
			<select id="workflow" size="15" name="workflow">
				<tal:block tal:repeat="group groups">
					<optgroup tal:attributes="label python:test(len(group)<=80, group, '%s ...' % group[:77])">
						<tal:block tal:repeat="item python:items[group]">
							<option
                                                        tal:define="terminated
                                                        python:item.has_key('terminated')
                                                        and
                                                        item['terminated']=='1'"
                                                        tal:attributes="value
                                                        item/uri; class
                                                        python:test(terminated,
                                                        'terminated', None);
                                                        selected
                                                        python:item['uri'] ==
                                                        here.workflow">
								[<span tal:replace="python:' '.join(item['SOURCE_TITLE'].split()[0:2])" />]
								<span tal:replace="python:test(len(item['TITLE'])<=80, item['TITLE'], '%s ...' % item['TITLE'][:77])" />
								<tal:block tal:condition="terminated"> (<tal:block i18n:translate="">terminated</tal:block>)</tal:block>
							</option>
						</tal:block>
					</optgroup>
				</tal:block>
			</select>
		</td>
	</tr>
	<tr>
		<td><label for="content_type_in" class="form-optional">Accepted content-type</label></td>
		<td><input type="text" name="content_type_in" id="content_type_in" size="50" tal:attributes="value here/content_type_in" /></td>
	</tr>
	<tr>
		<td><label for="content_type_out" class="form-label">Output content type</label></td>
		<td><input type="text" name="content_type_out" id=="content_type_out" tal:attributes="value here/content_type_out" size="40" /></td>
	</tr>
	<tr>
		<td><label for="script_url" class="form-label">Script path</td>
		<td><input type="text" name="script_url" id="script_url" tal:attributes="value here/script_url" size="70" /></td>
	</tr>
	<tr>
		<td><label for="max_size" class="form-label">Upper limit for file size</td>
                <tal:block tal:condition="python:hasattr(here, 'max_size')">
                    <td><input type="text" name="max_size" id="max_size" 
                            size="70" tal:attributes="value
                            here/max_size"/>MB (default 10 MB)
                    </td>
                </tal:block>
                <tal:block tal:condition="python: not hasattr(here, 
                    'max_size')">
		    <td ><input type="text" name="max_size" id="max_size" 
                            size="70" value="10" />MB (default 10 MB)</td>
                </tal:block>
	</tr>
	<tr>
		<td colspan="2">
			Define the values for the extra parameters to be evaluated as Python expressions
			in the exact order as they appear in the QA function called.
			You can use '<code>file_obj</code>' as file context and '<code>l_script_obj<code>'
			as the QA script object.
			(e.g. <code>file_obj.getParentNode().getCountryCode()</code>)
		</td>
	</tr>
	<tr>
		<td><label for="qa_extraparams" class="form-optional">Extra parameters</label></td>
		<td valign="top"><textarea name="qa_extraparams" id="qa_extraparams" rows="5" cols="40" tal:content="here/getExtraParameters"></textarea></td>
	</tr>
	<tr>
		<td></td>
		<td><input type="submit" value="Save changes" /></td>
	</tr>
</table>
</form>

<tal:block tal:replace="structure here/manage_page_footer" />
