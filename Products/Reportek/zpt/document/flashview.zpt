<metal:block use-macro="container/standard_template.pt/macros/page">

  <metal:block fill-slot="content">
    <tal:block tal:define="has_permission here/canViewContent">

      <tal:block tal:condition="has_permission">
        <div id="operations">
          <ul>
            <li>
              <a tal:attributes="href string:${here/absolute_url}/manage_edit_document" title="Go back to this file operations page" i18n:attributes="title" i18n:translate="">Back to file</a>
              <a tal:attributes="href python:here.getMySelf().absolute_url()" title="Go back to envelope" i18n:attributes="title" i18n:translate="">Back to envelope</a>
            </li>
          </ul>
        </div>
        <h1><tal:block i18n:translate="">File</tal:block>: <span tal:replace="here/id" /></h1>
        <p i18n:translate="">The GIS viewer was created using Macromedia Flash 8. If you do not see it properly install the necessary plugin from the <a href="http://www.macromedia.com/go/getflashplayer">Macromedia website</a>.</p>
      <script type="text/javascript">
            // <![CDATA[
      // -----------------------------------------------------------------------------
      // Globals
      // Major version of Flash required
      var requiredMajorVersion = 8;
      // Minor version of Flash required
      var requiredMinorVersion = 0;
      // Revision of Flash required
      var requiredRevision = 0;
      // the version of javascript supported
      var jsVersion = 1.0;
      // -----------------------------------------------------------------------------
      // ]]>
      </script>
      <script language="VBScript" type="text/vbscript">
            // <![CDATA[
      // Visual basic helper required to detect Flash Player ActiveX control version information
      Function VBGetSwfVer(i)
        on error resume next
        Dim swControl, swVersion
        swVersion = 0
      
        set swControl = CreateObject("ShockwaveFlash.ShockwaveFlash." + CStr(i))
        if (IsObject(swControl)) then
        swVersion = swControl.GetVariable("$version")
        end if
        VBGetSwfVer = swVersion
      End Function
      // ]]>
      </script>
      <script language="JavaScript1.1" type="text/javascript">
            // <![CDATA[
      // Detect Client Browser type
      var isIE  = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false;
      var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false;
      var isOpera = (navigator.userAgent.indexOf("Opera") != -1) ? true : false;
      jsVersion = 1.1;
      // JavaScript helper required to detect Flash Player PlugIn version information
      function JSGetSwfVer(i){
        // NS/Opera version >= 3 check for Flash plugin in plugin array
        if (navigator.plugins != null && navigator.plugins.length > 0) {
          if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
            var swVer2 = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";
            var flashDescription = navigator.plugins["Shockwave Flash" + swVer2].description;
            descArray = flashDescription.split(" ");
            tempArrayMajor = descArray[2].split(".");
            versionMajor = tempArrayMajor[0];
            versionMinor = tempArrayMajor[1];
            if ( descArray[3] != "" ) {
              tempArrayMinor = descArray[3].split("r");
            } else {
              tempArrayMinor = descArray[4].split("r");
            }
            versionRevision = tempArrayMinor[1] > 0 ? tempArrayMinor[1] : 0;
            flashVer = versionMajor + "." + versionMinor + "." + versionRevision;
          } else {
            flashVer = -1;
          }
        }
        // MSN/WebTV 2.6 supports Flash 4
        else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.6") != -1) flashVer = 4;
        // WebTV 2.5 supports Flash 3
        else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.5") != -1) flashVer = 3;
        // older WebTV supports Flash 2
        else if (navigator.userAgent.toLowerCase().indexOf("webtv") != -1) flashVer = 2;
        // Can't detect in all other cases
        else {
          
          flashVer = -1;
        }
        return flashVer;
      } 
      // If called with no parameters this function returns a floating point value 
      // which should be the version of the Flash Player or 0.0 
      // ex: Flash Player 7r14 returns 7.14
      // If called with reqMajorVer, reqMinorVer, reqRevision returns true if that version or greater is available
      function DetectFlashVer(reqMajorVer, reqMinorVer, reqRevision) 
      {
        reqVer = parseFloat(reqMajorVer + "." + reqRevision);
        // loop backwards through the versions until we find the newest version 
        for (i=25;i>0;i--) {  
          if (isIE && isWin && !isOpera) {
            versionStr = VBGetSwfVer(i);
          } else {
            versionStr = JSGetSwfVer(i);  
          }
          if (versionStr == -1 ) {
            return false;
          } else if (versionStr != 0) {
            if(isIE && isWin && !isOpera) {
              tempArray         = versionStr.split(" ");
              tempString        = tempArray[1];
              versionArray      = tempString .split(",");
            } else {
              versionArray      = versionStr.split(".");
            }
            versionMajor      = versionArray[0];
            versionMinor      = versionArray[1];
            versionRevision   = versionArray[2];
            
            versionString     = versionMajor + "." + versionRevision;   // 7.0r24 == 7.24
            versionNum        = parseFloat(versionString);
            // is the major.revision >= requested major.revision AND the minor version >= requested minor
            if ( (versionMajor > reqMajorVer) && (versionNum >= reqVer) ) {
              return true;
            } else {
              return ((versionNum >= reqVer && versionMinor >= reqMinorVer) ? true : false ); 
            }
          }
        } 
        return (reqVer ? false : 0.0);
      }
      // ]]>
      </script>

      <span tal:replace="structure here/flash_document_js" />

      <script type="text/javascript">
            // <![CDATA[
      var hasRightVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);
      if(hasRightVersion) {  // if we've detected an acceptable version
        var oeTags = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'
        + 'width="800" height="600"'
        + 'codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab">'
        + '<param name="movie" value="/flash/int_rgis.swf" />'
        + '<param name="quality" value="high" />'
        + '<param name="bgcolor" value="#ffffff" />'
        + '<param name="flashvars" value="vars=' + absolute_url + ';/flash/bounding.xml;reportnet;geonode-mirror.eea.eu.int;' + country_code + ';' + editable + ';" />'
        + '<embed src="/flash/int_rgis.swf" quality="high" bgcolor="#ffffff" '
        + 'width="800" height="600" name="int_rgis" align="middle"'
        + 'play="true"'
        + 'loop="false"'
        + 'quality="high"'
        + 'flashvars="vars=' + absolute_url + ';/flash/bounding.xml;reportnet;geonode-mirror.eea.eu.int;' + country_code + ';' + editable + ';"'
        + 'allowScriptAccess="sameDomain"'
        + 'type="application/x-shockwave-flash"'
        + 'pluginspage="http://www.macromedia.com/go/getflashplayer">'
        + '<\/embed>'
        + '<\/object>';
        document.write(oeTags);   // embed the flash movie
        } else {  // flash is too old or we can't detect the plugin
        var alternateContent = 'Alternate HTML content should be placed here.'
        + 'This content requires the Macromedia Flash Player.'
        + '<a href=http://www.macromedia.com/go/getflash/>Get Flash</a>';
        document.write(alternateContent);  // insert non-flash content
        }
      // ]]>
      </script>
      <noscript>
        <p i18n:translate="">In order to access this page, Javascript needs to be enabled on your brwoser. Please enable it and refresh the page.</p>
      </noscript>
      <br /><br />

      </tal:block>

      <tal:block tal:condition="python:not has_permission">
        <h1 i18n:translate="">Not available</h1>
        <p i18n:translate="">You are trying to access a file from an envelope which is not yet available for public view. Work is still in progress.</p>
      </tal:block>

    </tal:block>
  </metal:block>
</metal:block>
