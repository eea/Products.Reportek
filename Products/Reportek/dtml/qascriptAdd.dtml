<dtml-var manage_page_header>
<dtml-var	"manage_form_title(this(), _,
			form_title='Add QAScript Form',
			help_product='Reportek',
			help_topic=''
			)">

<form action="manage_addQAScript" method="post">

<table cellspacing="0" cellpadding="2" border="0">
	<tr>
		<th><div class="form-label">Id</div></th>
		<td><input type="text" name="id" id="id" size="20" /></td>
	</tr>
	<tr>
		<th><div class="form-optional">Title</div></th>
		<td><input type="text" name="title" id="title" size="40" /></td>
	</tr>
	<tr>
		<th><div class="form-optional">Description</div></th>
		<td><textarea name="description" id="description" cols="40" rows="3"></textarea></td>
	</tr>
	<tr>
		<th><div class="form-optional">XML schema</div></th>
		<td><input type="text" name="xml_schema" id="xml_schema" size="40" /></td>
	</tr>
	<tr>
		<th><div class="form-optional">Workflow</div></th>
		<td><input type="text" name="workflow" id="workflow" size="40" /></td>
	</tr>
	<tr>
		<th><div class="form-optional">Output content type</div></th>
		<td><input type="text" name="content_type_out" id=="content_type_out" size="40" /></td>
	</tr>
	<tr>
		<th><div class="form-optional">Script path</div></th>
		<td><input type="text" name="script_url" id=="script_url" size="40" /></td>
	</tr>
	<tr>
		<td colspan="2">
			Define the values for the extra parameters to be evaluated as Python expressions
			in the exact order as they appear in the QA function called.
			You can use '<code>file_obj</code>' as file context and '<code>l_script_obj<code>'
			as the QA script object.
			(e.g. <code>file_obj.getParentNode().getCountryCode()</code>)
		</td>
	</tr>
	<tr>
		<th><div class="form-optional">Extra parameters</div></th>
		<td align="left" valign="top">
			<textarea name="qa_extraparams" rows="5" cols="40"></textarea>
		</td>
	</tr>
</table>
<input class="form-element" type="submit" name="submit" value="Add" />

</form>

<dtml-var manage_page_footer>
